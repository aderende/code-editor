name: Build Code Editor Targets
on:
  push:
    branches:
      - 'main'
      - '*.*'
  workflow_dispatch:
  
jobs:
  build:
    name: Build Code Editor Targets
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
    environment: build-targets-workflow-env
    strategy:
      matrix:
        build-target: [code-editor-server, code-editor-sagemaker-server, code-editor-web-embedded]
        exclude:
          # Only build SageMaker for now, remove the excluded targets when needed in the future.
          - build-target: code-editor-server
          - build-target: code-editor-web-embedded
    steps:
      - name: Start Build Workflow
        run: |
          echo "Starting Build Workflow for target: ${{ matrix.build-target }}"

      - name: Use role credentials for metrics
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2
        
      - name: Set up build environment
        run: |
          echo "Installing required dependencies"
          sudo apt-get update
          sudo apt-get install -y quilt libkrb5-dev libx11-dev libxkbfile-dev libxml2-utils
      
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Run patches script
        run: |
          ./scripts/prepare-src.sh
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'code-editor-src/package-lock.json'
      
      - name: Install code editor dependencies
        run: |
          cd code-editor-src
          echo "Installing dependencies" && npm ci
      
      - name: Build artifacts 
        run: |
          BUILD_TARGET=$(./scripts/determine-build-target.sh ${{ matrix.build-target }})
          mkdir -p ./$BUILD_TARGET
          echo "Mock build for ${{ matrix.build-target }}" > ./$BUILD_TARGET/README.txt
      
      - name: Prepare artifacts to upload
        run: |
          BUILD_TARGET=$(./scripts/determine-build-target.sh ${{ matrix.build-target }})
          tar -czf ${{ matrix.build-target }}-src.tar.gz ./code-editor-src
          tar -czf ${{ matrix.build-target }}-build.tar.gz ./$BUILD_TARGET
      
      - name: Upload src artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-${{ matrix.build-target }}-src
          path: ${{ matrix.build-target }}-src.tar.gz
          retention-days: 90

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-${{ matrix.build-target }}-build
          path: ${{ matrix.build-target }}-build.tar.gz
          retention-days: 90

      - name: Report Failure Metric
        if: failure()
        run: |
          aws cloudwatch put-metric-data \
            --namespace "Aderende" \
            --metric-name "WorkflowFailed" \
            --dimentions "Name=BuildTargets" \
            --value 1